#this pipeline is for python API on Azure Kubernetes Services

name: Build CI

on: workflow_dispatch

# Below environment variables available to all jobs and steps in this workflow
env:
    REGISTRY_NAME: sai9356
    CLUSTER_NAME: my-aks-cluster
    CLUSTER_RESOURCE_GROUP: dinkar-rg
    NAMESPACE: default

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master

      # Connecting to Azure Container registry (ACR)
    - name: ACR Login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    # Docker container build 
    - name: Docker Build
      run: |
        echo '<-----------------------Docker build started----------------------->'
        docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/mytestimage:${{ github.sha }}
        echo '<------------------------Docker build Ended------------------------>'
    
    # Docker Container Push to ACR
    - name: Docker Push
      run: |
        echo '<-----------------------Docker Publish started----------------------->'
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/mytestimage:${{ github.sha }}
        echo '<------------------------Docker Publish Ended------------------------>'
    
    
    # Set the target Azure Kubernetes Service (AKS) cluster.
    - name: Setting AKS target 
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    # Create namespace if doesn't exist
    - name: AKS namespace creating
      run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -

    # Create imagepullsecret for Azure Container registry (ACR)
    - name: Imagepullsecret for ACR
      uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}          
        
    # Deploy app to AKS
    - name: Deploying on AKS
      uses: azure/k8s-deploy@v1
      with:
        manifests: |
          kubernetes/deploy.yml
          Kubernetes/service.yml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/myimage:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}     
